<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lenovo.mt.mapper.StudentsMapper">
  <cache type="com.lenovo.mt.config.RedisCache"/>
  <resultMap id="BaseResultMap" type="com.lenovo.mt.model.Students">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Age" jdbcType="SMALLINT" property="age" />
    <result column="Cls" jdbcType="INTEGER" property="cls" />
    <association property="classes" column="Cls" select="getClasses"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, Name, Age, Cls
  </sql>
  <select id="selectByExample" parameterType="com.lenovo.mt.model.StudentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from students
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from students
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lenovo.mt.model.StudentsExample">
    delete from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lenovo.mt.model.Students">
    insert into students (ID, Name, Age, 
      Cls)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=SMALLINT}, 
      #{cls,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lenovo.mt.model.Students">
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="age != null">
        Age,
      </if>
      <if test="cls != null">
        Cls,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=SMALLINT},
      </if>
      <if test="cls != null">
        #{cls,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lenovo.mt.model.StudentsExample" resultType="java.lang.Long">
    select count(*) from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update students
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        Age = #{record.age,jdbcType=SMALLINT},
      </if>
      <if test="record.cls != null">
        Cls = #{record.cls,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update students
    set ID = #{record.id,jdbcType=INTEGER},
      Name = #{record.name,jdbcType=VARCHAR},
      Age = #{record.age,jdbcType=SMALLINT},
      Cls = #{record.cls,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lenovo.mt.model.Students">
    update students
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        Age = #{age,jdbcType=SMALLINT},
      </if>
      <if test="cls != null">
        Cls = #{cls,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lenovo.mt.model.Students">
    update students
    set Name = #{name,jdbcType=VARCHAR},
      Age = #{age,jdbcType=SMALLINT},
      Cls = #{cls,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getClasses" parameterType="int" resultType="com.lenovo.mt.model.Classes">
    select
    <include refid="com.lenovo.mt.mapper.ClassesMapper.Base_Column_List" ></include>
    from classes
    where ID = #{ID}
  </select>
  <resultMap id="DetailResultMap" type="com.lenovo.mt.model.Students">
    <id column="s_id" jdbcType="INTEGER" property="id" />
    <result column="s_name" jdbcType="VARCHAR" property="name" />
    <result column="s_age" jdbcType="SMALLINT" property="age" />
    <result column="s_cls" jdbcType="INTEGER" property="cls" />
    <association property="classes" javaType="com.lenovo.mt.model.Classes" column="s_cls">
      <id column="c_id" jdbcType="INTEGER" property="id" />
      <result column="c_clsname" jdbcType="VARCHAR" property="clsname" />
      <result column="c_grade" jdbcType="INTEGER" property="grade" />
      <association property="gradeDetail" javaType="com.lenovo.mt.model.Grade" column="c_grad">
        <id column="g_id" jdbcType="INTEGER" property="id" />
        <result column="g_name" jdbcType="VARCHAR" property="name" />
      </association>
    </association>
  </resultMap>
  <select id="getStudentsDetail" parameterType="java.lang.Integer" resultMap="DetailResultMap">
    select s.ID s_id,s.`Name` as s_name,s.Age as s_age,s.Cls as s_cls,c.ClsName as c_clsname,c.Grade as c_grade,c.ID as c_id,g.`Name` as g_name,g.ID as g_id
    from Students s
    inner join Classes c on s.Cls = c.ID
    inner join Grade g on c.Grade = g.ID
    where s.ID = #{id,jdbcType=INTEGER}
  </select>
  <resultMap id="liststuMap" type="com.lenovo.mt.model.Students">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Age" jdbcType="SMALLINT" property="age" />
    <result column="Cls" jdbcType="INTEGER" property="cls" />
  </resultMap>
  <select id="getList" resultMap="liststuMap">
    select ID,Name,Age,Cls FROM students
  </select>
</mapper>